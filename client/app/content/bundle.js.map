{"version":3,"sources":["app.js","notes/notes.js","services/notes-service.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n  let notelyApp = angular.module('notely', [\r\n    'ui.router',\r\n    'notely.notes'\r\n  ]);\r\n\r\n  function notelyConfig($urlRouterProvider) {\r\n    $urlRouterProvider.otherwise('/notes/');\r\n  }\r\n\r\n  notelyConfig.$inject = ['$urlRouterProvider'];\r\n  notelyApp.config(notelyConfig);\r\n\r\n  notelyApp.constant('API_BASE', 'http://localhost:3030/');\r\n})();\r\n","(function() {\r\n  angular.module('notely.notes', [\r\n    'ui.router',\r\n    'textAngular'\r\n  ])\r\n  .config(notesConfig);\r\n\r\n  notesConfig.$inject = ['$stateProvider'];\r\n  function notesConfig($stateProvider) {\r\n    $stateProvider\r\n\r\n      .state('notes', {\r\n        url: '/notes',\r\n        templateUrl: '/notes/notes.html',\r\n        controller: NotesController,\r\n        resolve: {\r\n          notesLoaded: function(NotesService) {\r\n            return NotesService.fetch();\r\n          }\r\n        }\r\n      })\r\n\r\n      .state('notes.form', {\r\n        url: '/:noteId',\r\n        templateUrl: '/notes/notes-form.html',\r\n        controller: NotesFormController\r\n      });\r\n  }\r\n\r\n  NotesController.$inject = ['$scope', '$state', 'NotesService'];\r\n  function NotesController($scope, $state, NotesService) {\r\n    $scope.notes = NotesService.getNotes();\r\n    $state.go('notes.form');\r\n  }\r\n\r\n  NotesFormController.$inject = ['$scope', '$state', 'NotesService'];\r\n  function NotesFormController($scope, $state, NotesService) {\r\n    $scope.note = NotesService.findById($state.params.noteId);\r\n    $scope.save = function() {\r\n      if ($scope.note._id) {\r\n        NotesService.update($scope.note);\r\n      }\r\n      else {\r\n        NotesService.create($scope.note).then(function(response) {\r\n          $state.go('notes.form', { noteId: response.data.note._id });\r\n        });\r\n      }\r\n    };\r\n    $scope.delete = function() {\r\n      NotesService.delete($scope.note).then(function() {\r\n        $state.go('notes.form', { noteId: undefined });\r\n      });\r\n    };\r\n  }\r\n})();\r\n","(function() {\r\n  angular.module('notely')\r\n    .service('NotesService', NotesService);\r\n\r\n  NotesService.$inject = ['$http', 'API_BASE'];\r\n  function NotesService($http, API_BASE) {\r\n    var _this = this;\r\n    _this.notes = [];\r\n\r\n    _this.fetch = function() {\r\n      return $http.get(`${API_BASE}notes`)\r\n        .then(\r\n          // Success\r\n          function(response) {\r\n            _this.notes = response.data;\r\n          },\r\n\r\n          // Failure\r\n          function(response) {\r\n            console.log(`aww, snap: ${response}`);\r\n          }\r\n        );\r\n    };\r\n\r\n    _this.getNotes = function() {\r\n      return _this.notes;\r\n    };\r\n\r\n    _this.create = function(note) {\r\n      var creationPromise = $http.post(`${API_BASE}notes`, {\r\n        note: note\r\n      });\r\n\r\n      creationPromise.then(function(response) {\r\n        _this.notes.unshift(response.data.note);\r\n      });\r\n\r\n      return creationPromise;\r\n    };\r\n\r\n    _this.update = function(note) {\r\n      return $http.put(`${API_BASE}notes/${note._id}`, {\r\n        note: {\r\n          title: note.title,\r\n          body_html: note.body_html\r\n        }\r\n      }).then(function(response) {\r\n        _this.replaceNote(response.data.note);\r\n      });\r\n    };\r\n\r\n    _this.delete = function(note) {\r\n      return $http.delete(`${API_BASE}notes/${note._id}`\r\n      ).then(function(response) {\r\n        _this.removeNote(response.data.note);\r\n      });\r\n    };\r\n\r\n    _this.removeNote = function(note) {\r\n      for (var i = 0; i < _this.notes.length; i++) {\r\n        if (_this.notes[i]._id === note._id) {\r\n          _this.notes.splice(i, 1);\r\n          return;\r\n        }\r\n      }\r\n    };\r\n\r\n    _this.replaceNote = function(updatedNote) {\r\n      for (var i = 0; i < _this.notes.length; i++) {\r\n        if (_this.notes[i]._id === updatedNote._id) {\r\n          _this.notes[i] = updatedNote;\r\n          return;\r\n        }\r\n      }\r\n    };\r\n\r\n    _this.findById = function(noteId) {\r\n      for (var i = 0; i < _this.notes.length; i++) {\r\n        // If the IDs match, return the current note\r\n        if (_this.notes[i]._id === noteId) {\r\n          return angular.copy(_this.notes[i]);\r\n        }\r\n      }\r\n      return {};\r\n    };\r\n  }\r\n}());\r\n"],"sourceRoot":"/source/"}